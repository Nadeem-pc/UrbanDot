<script src="https://unpkg.com/must-pop@latest/dist/library.js"></script>

<%-include("../../Views/Partials/user/header")%>

    <style>

        #itemImage{
            width: 80px;
            height: 80px;
        }
        .form-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            padding: 30px;
            margin: 80px 0;
        }
        .form-label {
            font-weight: 600;
        }
        #submitBtn{
            background: #00a884;
            background: -webkit-linear-gradient(to right, #00a884, #009688, #00897b, #00796b);
            background: linear-gradient(to right, #00a884, #009688, #00897b, #00796b);
            color: white;
        }
        .footer-area a{
            text-decoration: none;
        }
        #icon{
            background-color: beige;
        }

        .pop-container{
            background-color: white;
            margin-top: 80px;
            z-index: 10;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: #f8f9fa;
            min-height: 100vh;
        }

        .profileContainer{
            max-width: 1200px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 30px;
            padding: 100px 0;
        }

        .profile-sidebar {
            background: white;
            border-radius: 15px;
            padding: 30px;
            /* height: fit-content; */
        }

        .profile-main {
            background: white;
            border-radius: 15px;
            padding: 30px;
        }

        .profile-picture {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: #f1f2f6;
            margin: 0 auto 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 50px;
            color: #2d3436;
            position: relative;
            cursor: pointer;
        }

        .edit-avatar {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background: #2d3436;
            color: white;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 16px;
        }

        .user-name {
            text-align: center;
            font-size: 1.5em;
            margin-bottom: 5px;
        }

        .user-email {
            text-align: center;
            color: #636e72;
            margin-bottom: 20px;
        }

        .menu-items {
            list-style: none;
        }

        .menu-item {
            padding: 12px 15px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 5px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .menu-item.active {
            background: #2d3436;
            color: white;
        }

        .menu-item:hover:not(.active) {
            background: #f1f2f6;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .section-title {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #2d3436;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #2d3436;
        }

        .form-group input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 1em;
        }

        /* .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        } */

        .btn {
            background: #00b894;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1em;
            transition: background 0.3s ease;
        }

        .btn:hover {
            background: #1e2729;
        }

        .btn-outline {
            background: transparent;
            border: 2px solid #2d3436;
            color: #00b894;
        }

        .btn-outline:hover {
            background: #2d3436;
            color: white;
        }

        .order-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #ddd;
        }

        .order-items {
            margin-bottom: 15px;
        }

        .order-item {
            display: flex;
            gap: 15px;
            margin-bottom: 10px;
        }

        .item-image {
            width: 80px;
            height: 80px;
            background: #f1f2f6;
            border-radius: 8px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }

        .stat-value {
            font-size: 2em;
            font-weight: bold;
            color: #2d3436;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #636e72;
        }

        .badge {
            background: #f1f2f6;
            color: #2d3436;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.9em;
        }

        .badge.success {
            background: #00b894;
            color: white;
        }

        .address-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            position: relative;
        }

        .address-actions {
            position: absolute;
            top: 20px;
            right: 20px;
        }

        .size-preference {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .size-box {
            width: 40px;
            height: 40px;
            border: 2px solid #ddd;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .size-box.selected {
            border-color: #2d3436;
            background: #2d3436;
            color: white;
        }

        #address-type{
            text-transform: uppercase;
            font-weight: bold;
            padding: 5px 8px;
            display: flex;
            align-items: center;
            background-color: #dadada;
            font-weight: 400;
            font-size: small;
            border-radius: 3px;
        }

        .type{
            gap: 35px;
        }


        @media (max-width: 768px) {
            .container {
                grid-template-columns: 1fr;
            }
            
            .form-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }

    </style>


    <div class="profileContainer">
        <!-- Sidebar -->
            <div class="profile-sidebar">
                <div class="profile-picture">
                
                </div>
                <h2 class="user-name"><%=user.username%></h2>
                <p class="user-email"><%=user.email%></p>
                
                <ul class="menu-items">
                    <li class="menu-item active" onclick="showTab('profile')"> Profile</li>
                    <li class="menu-item" onclick="showTab('orders')"> Orders</li>
                    <li class="menu-item" onclick="showTab('addresses')"> Addresses</li>
                    <li class="menu-item" onclick="showTab('security')"> Security</li>
                </ul>
            </div> 

        <!-- Main Content -->
        <div class="profile-main">
            <!-- Profile Tab -->
            <div id="profile" class="tab-content active">
                <h2 class="section-title">Profile Information</h2>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-value">12</div>
                        <div class="stat-label">Orders</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">3</div>
                        <div class="stat-label">Wishlisted</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">250</div>
                        <div class="stat-label">Points</div>
                    </div>
                </div>
                
                <form id="profile-form">
                    <div class="form-grid">
                        <div class="form-group">
                            <label id="nameIndication">Name</label>
                            <input type="text" id="name" name="name" value="<%=user.username%>">
                        </div>
                        <!-- <div class="form-group">
                            <label>Last Name</label>
                            <input type="text" value="Doe">
                        </div> -->
                    </div>
                    <div class="form-group">
                        <label id="phoneIndication">Phone</label>
                        <input type="tel" id="phone" name="phone" value="<%=user.phone%>">
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" placeholder="<%=user.email%>" disabled>
                    </div>
                    <button class="btn">Save Changes</button>
                </form>
            </div>



            <!-- <div class="col-md-8 col-lg-6 form-container"> -->
            <div id="addAddress" class="tab-content">
                <h2 class="section-title mb-4">Add New Address</h2>
                <form id="addressForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="firstName" class="form-label" id="nameLabel">Name</label>
                            <input type="text" class="form-control" id="nameAtAddress" required>
                            <div class="invalid-feedback">Please enter your first name.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phone" class="form-label" id="mobLabel">Mobile</label>
                            <input type="tel" class="form-control" id="phoneAtAddress" required>
                            <div class="invalid-feedback">Please enter a valid 10-digit phone number.</div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="pincode" class="form-label" id="pincodeLabel">Pincode</label>
                            <input type="text" class="form-control" id="pincode" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="city" class="form-label" id="cityLabel">City</label>
                            <input type="text" class="form-control" id="city" required>
                        </div>
                    </div>


                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <textarea class="form-control" id="address" rows="3" required></textarea>
                    </div>


                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="country" class="form-label">Country</label>
                            <select class="form-select" id="country" >
                                <option value="">Select Country</option>
                                <option value="India">India</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="state" class="form-label">State</label>
                            <select class="form-select" id="state" required>
                                <option value="" >Select State</option>
                                <option value="Andhra Pradesh">Andhra Pradesh</option>
                                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                <option value="Assam">Assam</option>
                                <option value="Bihar">Bihar</option>
                                <option value="Chhattisgarh">Chhattisgarh</option>
                                <option value="Goa">Goa</option>
                                <option value="Gujarat">Gujarat</option>
                                <option value="Haryana">Haryana</option>
                                <option value="Himachal Pradesh">Himachal Pradesh</option>
                                <option value="Jharkhand">Jharkhand</option>
                                <option value="Karnataka">Karnataka</option>
                                <option value="Kerala">Kerala</option>
                                <option value="Madhya Pradesh">Madhya Pradesh</option>
                                <option value="Maharashtra">Maharashtra</option>
                                <option value="Manipur">Manipur</option>
                                <option value="Meghalaya">Meghalaya</option>
                                <option value="Mizoram">Mizoram</option>
                                <option value="Nagaland">Nagaland</option>
                                <option value="Odisha">Odisha</option>
                                <option value="Punjab">Punjab</option>
                                <option value="Rajasthan">Rajasthan</option>
                                <option value="Sikkim">Sikkim</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <option value="Telangana">Telangana</option>
                                <option value="Tripura">Tripura</option>
                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                <option value="Uttarakhand">Uttarakhand</option>
                                <option value="West Bengal">West Bengal</option>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label" id="typeLabel">Address Type</label>
                        <div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="addressType" id="home" value="home" >
                                <label class="form-check-label" for="home">Home</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="addressType" id="work" value="work">
                                <label class="form-check-label" for="work">Work</label>
                            </div>
                        </div>
                    </div>

                    <!-- <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="defaultAddress">
                        <label class="form-check-label" for="defaultAddress">
                            Set as Default Address
                        </label>
                    </div> -->

                    <div class="createBtn text-center">
                        <button type="submit" id="submitBtn" class="btn">Save Address</button>
                    </div>
                </form>
            </div>



            <!-- Orders Tab -->
           <div id="orders" class="tab-content">
        <% if (orders && orders.length > 0) { %>
        <h2 class="section-title">Order History</h2>
        <% orders.forEach(order => { %> <!-- Loop through each order -->
            <div class="order-card">
                <div class="order-header">
                    <div>
                        <strong> Order #<%= order._id %> </strong>
                        <div style="color: #636e72">Placed on <%= order.orderDate %></div>
                    </div>
                    <% if (order.orderStatus === 'Pending') { %>
                        <span class="badge success" style="background-color: orange; display: flex; align-items: center;"><%= order.orderStatus %></span>
                    <% } else if (order.orderStatus === 'Delivered') { %>
                        <span class="badge success" style="background-color: green; display: flex; align-items: center;"><%= order.orderStatus %></span>
                    <% }else if(order.orderStatus === 'Cancelled'){ %>
                        <span class="badge success" style="background-color: red; display: flex; align-items: center;"><%= order.orderStatus %></span>
                    <%}else if(order.orderStatus === 'Shipped'){%>    
                        <span class="badge success" style="background-color: orange; display: flex; align-items: center;"><%= order.orderStatus %></span>
                    <%}%>    
                </div>
                <div class="order-items">
                    <% order.orderedItems.forEach(product => { %> <!-- Loop through orderedItems -->
                        <div class="order-item">
                            <div class="item-image"><img src="/uploads/product-images/<%=product.product.images[0]%>" id="itemImage"></div>
                            <div>
                                <div><strong><%= product.product.productName %></strong></div>
                                <div>₹<%= product.price %></div>
                            </div>
                        </div>
                    <% }) %>
                </div>
                <div style="display: flex; justify-content: center; align-items: center;"><strong>Total amount ₹<%= order.totalAmount %></strong></div>

                <div class="viewDetails">
                    <button class="btn btn-outline" onclick="viewOrderDetails('orderDetails',`<%=order._id%>`)">View Details</button>
                </div>
            </div>
        <% }) %>
    <% } else { %>
        <h2>No Orders Found</h2>
        <a href="/shop" class="button">Start Shopping</a>
    <% } %>
</div>

<div id="orderDetails" class="tab-content">
    <h2 class="section-title">Order Details</h2>
    <% orders.forEach(order => { %> <!-- Loop through each order -->
        <div class="order-card">
            <div class="order-header">
                <div>
                    <strong> Order #<%= order._id %> </strong>
                    <div style="color: #636e72">Placed on <%= order.orderDate %></div>
                </div>
                <% if (order.orderStatus === 'Pending') { %>
                    <span class="badge success" style="background-color: orange; display: flex; align-items: center;"><%= order.orderStatus %></span>
                <% } else if (order.orderStatus === 'Delivered') { %>
                    <span class="badge success" style="background-color: green; display: flex; align-items: center;"><%= order.orderStatus %></span>
                <% }else if(order.orderStatus === 'Cancelled'){ %>
                    <span class="badge success" style="background-color: red; display: flex; align-items: center;"><%= order.orderStatus %></span>
                <%}else if(order.orderStatus === 'Shipped'){%>    
                    <span class="badge success" style="background-color: orange; display: flex; align-items: center;"><%= order.orderStatus %></span>
                <%}%>    
            </div>
            <div class="order-items">
                <% order.orderedItems.forEach(product => { %> <!-- Loop through orderedItems -->
                    <div class="order-item">
                        <div class="item-image"><img src="/uploads/product-images/<%=product.product.images[0]%>" id="itemImage"></div>
                        <div>
                            <div><strong><%= product.product.productName %></strong></div>
                            <div>₹<%= product.price %></div>
                            
                        </div>
                    </div>
                <% }) %>
            </div>
            <div style="display: flex; justify-content: center; align-items: center;"><strong>Total amount ₹<%= order.totalAmount %></strong></div>
            
        </div>
        <% }) %>
        
</div>
            <!-- Addresses Tab -->
            <div id="addresses" class="tab-content">
                <% if(address !== null){ %>
                    <h2 class="section-title">Saved Addresses</h2>
                    <% address.address.map((val)=>{ %>
                        <div class="address-card">
                            <div class="address-actions">
                                <button class="btn btn-outline" onclick="location.href=''">Edit</button>
                            <button class="btn btn-outline" onclick="location.href='/deleteAddress/<%=address._id%>/<%=val._id%>'">Delete</button>
                            </div>
                            <div class="type d-flex "> 
                                <h3><%= val.name %></h3>
                                <h5 id="address-type"> <%=val.addressType%> </h5>
                            </div>
                            <p><%= val.fullAddress %></p>
                            <!-- <p><%= val.city %></p> -->
                            <p> <%=val.pincode%> </p>
                            <p> <%=val.phone%> </p>
                            <p> <%= val.state%></p>
                            <p> <%= val.country%></p>
                        </div>
                    <%})%>
                <%}else{%>
                    <h2 class="section-title">Add Address</h2>
                <%}%>
                <button class="btn" onclick="changePage('addAddress')">Add New Address</button>
            </div>

            <div id="editAddress" class="tab-content">
                <h2 class="section-title mb-4">Edit Address</h2>
                <form id="editAddressForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="firstName" class="form-label" id="nameLabel">Name</label>
                            <input type="text" placeholder="" class="form-control" id="nameAtEditAddress" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phone" class="form-label" id="mobLabel">Mobile</label>
                            <input type="tel" placeholder="" class="form-control" id="phoneAtEditAddress" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="pincode" class="form-label" id="pincodeLabel">Pincode</label>
                            <input type="text" placeholder="" class="form-control" id="editPincode" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="city" class="form-label" id="cityLabel">City</label>
                            <input type="text" placeholder="" class="form-control" id="editCity" required>
                        </div>
                    </div>


                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <textarea class="form-control" id="editAddress" rows="3" required></textarea>
                    </div>


                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="country" class="form-label">Country</label>
                            <select class="form-select" id="editCountry" required>
                                <option value="">Select Country</option>
                                <option value="India">India</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="state" class="form-label">State</label>
                            <select class="form-select" id="editState" required>
                                <option value="">Select State</option>
                                <option value="Andhra Pradesh">Andhra Pradesh</option>
                                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                <option value="Assam">Assam</option>
                                <option value="Bihar">Bihar</option>
                                <option value="Chhattisgarh">Chhattisgarh</option>
                                <option value="Goa">Goa</option>
                                <option value="Gujarat">Gujarat</option>
                                <option value="Haryana">Haryana</option>
                                <option value="Himachal Pradesh">Himachal Pradesh</option>
                                <option value="Jharkhand">Jharkhand</option>
                                <option value="Karnataka">Karnataka</option>
                                <option value="Kerala">Kerala</option>
                                <option value="Madhya Pradesh">Madhya Pradesh</option>
                                <option value="Maharashtra">Maharashtra</option>
                                <option value="Manipur">Manipur</option>
                                <option value="Meghalaya">Meghalaya</option>
                                <option value="Mizoram">Mizoram</option>
                                <option value="Nagaland">Nagaland</option>
                                <option value="Odisha">Odisha</option>
                                <option value="Punjab">Punjab</option>
                                <option value="Rajasthan">Rajasthan</option>
                                <option value="Sikkim">Sikkim</option>
                                <option value="Tamil Nadu">Tamil Nadu</option>
                                <option value="Telangana">Telangana</option>
                                <option value="Tripura">Tripura</option>
                                <option value="Uttar Pradesh">Uttar Pradesh</option>
                                <option value="Uttarakhand">Uttarakhand</option>
                                <option value="West Bengal">West Bengal</option>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label" id="typeLabel">Address Type</label>
                        <div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="editAddressType" id="home" value="home" >
                                <label class="form-check-label" for="home">Home</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="editAddressType" id="work" value="work">
                                <label class="form-check-label" for="work">Work</label>
                            </div>
                        </div>
                    </div>

                    <div class="editBtn text-center">
                        <button type="submit" id="submitBtn" class="btn">Edit Address</button>
                    </div>
                </form>
            </div>

   
            <!-- Security Tab -->
            <div id="security" class="tab-content">
                <h2 class="section-title">Security Settings</h2>
                <form id="passwordChangingForm">
                    <div class="form-group">
                        <label id="currentPassIndication">Current Password</label>
                        <input type="password" name="password" id="currentPassword">
                    </div>
                    <div class="form-group">
                        <label id="newPassIndication">New Password</label>
                        <input type="password" name="newPassword" id="newPassword">
                    </div>
                    <div class="form-group">
                        <label id="confirmPassIndication">Confirm New Password</label>
                        <input type="password" id="confirmPassword">
                    </div>
                    <button class="btn">Update Password</button>
                </form>
                <a class="d-flex align-items-center justify-content-center" href="">Forgot password</a>
            </div>
     

    </div>
        

    </div>

    <script>
        // Tab switching functionality
        function showTab(tabId) {
            // Update menu items
            document.querySelectorAll('.menu-item').forEach(item => {
                item.classList.remove('active');
            });
            document.querySelector(`.menu-item[onclick="showTab('${tabId}')"]`).classList.add('active');
            
            // Update tab content
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            document.getElementById(tabId).classList.add('active');
        }

        function changePage(tabId) {
            // Update menu items
            document.querySelectorAll('.createBtn').forEach(item => {
                item.classList.remove('active');
            });
            document.querySelector(`.createBtn[onclick="showTab('${tabId}')"]`)
            
            // Update tab content
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            document.getElementById(tabId).classList.add('active');
        }

        function editPage(tabId, obj) {
            // Update menu items
            document.querySelectorAll('.editBtn').forEach(item => {
                item.classList.remove('active');
            });
            document.querySelector(`.editBtn[onclick="showTab('${tabId}')"]`)
            
            // Update tab content
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            document.getElementById(tabId).classList.add('active');

            editAddress(obj)
        }

        function viewOrderDetails(tabId, orderId) {
    // Log the inputs for debugging
    console.log(`Switching to tab with ID: ${tabId} for Order ID: ${orderId}`);

    // Ensure all tab contents are hidden
    document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.remove('active');
    });

    // Get the target tab element
    const targetTab = document.getElementById(tabId);
    if (!targetTab) {
        console.error(`Tab with ID '${tabId}' not found.`);
        return;
    }

    // Activate the target tab
    targetTab.classList.add('active');

    // Fetch the order details dynamically
    fetch(`/orderDetails/${orderId}`) // Ensure this route exists on the backend
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(orderDetails => {
            console.log('Order details fetched:', orderDetails,address);

            // Dynamically populate the `orderDetails` div
            targetTab.innerHTML = `
                <h2 class="section-title">Order Details</h2>
                <div class="order-card">
                    <div class="order-header">
                        <div>
                            <strong>Order #${orderDetails._id}</strong>
                            <div style="color: #636e72">Placed on ${orderDetails.orderDate}</div>
                            <div style="color: #636e72">Payment Method : ${orderDetails.paymentMethod}</div>
                        </div>
                        <span class="badge success" style="background-color: ${
                            orderDetails.orderStatus === 'Pending' ? 'orange' :
                            orderDetails.orderStatus === 'Delivered' ? 'green' :
                            orderDetails.orderStatus === 'Cancelled' ? 'red' : ''
                        }; display: flex; align-items: center;">
                            ${orderDetails.orderStatus}
                        </span>
                    </div>
                    <div class="order-items">
                        ${orderDetails.orderedItems.map(product => `
                            <div class="order-item">
                                <div class="item-image"><img src="/uploads/product-images/${product.product.images[0]}" style='width:90px;' alt="Product Image"></div>
                                <div>
                                    <div><strong>${product.product.productName}</strong></div>
                                    <div>₹${product.price}</div>
                                    <div>Quantity : ${product.quantity}</div>
                                   ${product.status !== "Cancelled" ? `<div style="">
                                        <button onclick="cancelProduct('${product.product._id}','${orderDetails._id}')" 
                                                style="margin-top:10px;background-color:red;border:0;color:white;width:70px;border-radius:4px;">
                                            Cancel
                                        </button>
                                    </div>` : ''}
                                </div>
                            </div>
                        `).join('')}
                    </div>
                    <div style="display: flex; justify-content: center; align-items: center;">
                        <strong>Total amount ₹${orderDetails.totalAmount}</strong>
                    </div>
                    <div>
                            <div style="color: #636e72">Delivery Address <br></div>
                            <div style="color: #636e72"> ${orderDetails.address} </div>

                    </div>   
                </div>
            `;
        })
        .catch(error => {
            console.error('Error fetching order details:', error);
            targetTab.innerHTML = '<p>Failed to load order details. Please try again later.</p>';
        });
}

    async function cancelProduct(productId,orderId){
        const response = await fetch('/cancelProduct',{
                method : "POST",
                headers : {
                    'Content-Type' : 'application/json'
                },
                body : JSON.stringify({productId,orderId})
            })
        let data = await response.json()

        if(!data.status){
            return Must.failure({time: 3000, content: data.message})
        }
        
        setTimeout(() => {
            window.location.href = '/profile'
        },1500)

        Must.success({time: 1500, content: data.message, color:'#27ae60'})

        document.getElementById("icon").style.backgroundColor = 'beige'
        document.getElementsByClassName("pop-container")[0].style.borderRadius = '5px'
                    
    }

        // Size preference selection
        document.querySelectorAll('.size-box').forEach(box => {
            box.addEventListener('click', () => {
                document.querySelectorAll('.size-box').forEach(b => b.classList.remove('selected'));
                box.classList.add('selected');
            });
        });

        // Profile save functionality
        function saveProfile(e) {
            e.preventDefault();
            const btn = e.target;
            const originalText = btn.textContent;
            btn.textContent = 'Saving...';
            
            // Simulate API call
            setTimeout(() => {
                btn.textContent = 'Saved!';
                setTimeout(() => {
                    btn.textContent = originalText;
                }, 2000);
            }, 1000);
        }

        // Add hover effects to interactive elements
        document.querySelectorAll('.order-card, .address-card').forEach(card => {
            card.addEventListener('mouseover', () => {
                card.style.boxShadow = '0 5px 15px rgba(0,0,0,0.1)';
                card.style.transform = 'translateY(-2px)';
                card.style.transition = 'all 0.3s ease';
            });
            
            card.addEventListener('mouseout', () => {
                card.style.boxShadow = 'none';
                card.style.transform = 'translateY(0)';
            });
        });

        function editAddress (obj){

            let newObj = JSON.parse(`${obj}`)
            let name = document.getElementById('nameAtEditAddress')
            let phone =  document.getElementById('phoneAtEditAddress')
            let pincode =  document.getElementById('editPincode')
            let city =  document.getElementById('editCity')
            let country =  document.getElementById('editCountry')
            let state =  document.getElementById('editState')
            let fullAddress =  document.getElementById('editAddress')
            let addressType =  document.getElementsByName('editAddressType') 
            name.value = newObj.name ?? "Guest"
            
        }

        // User Profile Edit
        document.getElementById('profile-form').addEventListener('submit', async (event) => {
            event.preventDefault()

            let name = document.getElementById('name').value
            let phone = document.getElementById('phone').value

           
           if(!validateForm()) return 
           
            const response = await fetch('/editUser',{
                method : "POST",
                headers : {
                    'Content-Type' : 'application/json'
                },
                body : JSON.stringify({name,phone})
            })
            let data = await response.json()

            if(!data.status){
                return Must.failure({time: 3000, content: data.message})
            }
            
            setTimeout(() => {
                window.location.href = '/profile'
            },1500)

            Must.success({time: 1500, content: data.message, color:'#27ae60'})

            document.getElementById("icon").style.backgroundColor = 'beige'
            document.getElementsByClassName("pop-container")[0].style.borderRadius = '5px'

        })

        function validateForm (){

            const usernameInput = document.getElementById('name')
            let phoneInput = document.getElementById('phone')

            const usernamePattern = /^[A-Za-z\s]{3,}$/;
            const phonePattern = /^[0-9]{10}$/;

            if(!usernamePattern.test(usernameInput.value)){
                document.getElementById('nameIndication').innerHTML = 'Name must be at least 3 characters long and contain only letters and spaces.'
                document.getElementById('nameIndication').style.color = 'red'
                return false
            }else{
                document.getElementById('nameIndication').innerHTML = 'Name'
                document.getElementById('nameIndication').style.color = 'black'   
            }

            if(!phonePattern.test(phoneInput.value)){
                document.getElementById('phoneIndication').innerHTML = 'Phone number must be exactly 10 digits.'
                document.getElementById('phoneIndication').style.color = 'red'
                return false 
            }else{
                document.getElementById('phoneIndication').innerHTML = 'Phone'
                document.getElementById('phoneIndication').style.color = 'black'  
            }

            return true
        }
    
        // Change Password
        function passwordValidation(){
            let password = document.getElementById('currentPassword')
            let newPassword = document.getElementById('newPassword')
            let confirmPassword = document.getElementById('confirmPassword')

            const passwordCriteria = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

            if(!passwordCriteria.test(newPassword.value)){
                document.getElementById('newPassIndication').innerHTML = 'Password must be at least 8 characters long and contain uppercase, lowercase, number and special character.'
                document.getElementById('newPassIndication').style.color = 'red'
                return false
            }else{
                document.getElementById('newPassIndication').innerHTML = 'Current Password'
                document.getElementById('newPassIndication').style.color = 'black'
            }

            if(newPassword.value !== confirmPassword.value){
                document.getElementById('confirmPassIndication').innerHTML = 'Password does not match. Please re-enter your password.'
                document.getElementById('confirmPassIndication').style.color = 'red'
                return false
            }else{
                document.getElementById('confirmPassIndication').innerHTML = 'Confirm Password'
                document.getElementById('confirmPassIndication').style.color = 'black'
            }
            
            return true
        }

        document.getElementById('passwordChangingForm').addEventListener('submit', async (event) => {
            event.preventDefault()

            let password = document.getElementById('currentPassword').value
            let changedPassword = document.getElementById('newPassword').value
    
            if(!passwordValidation()) return 

            const response = await fetch('/changePassword',{ 
                method : "POST",
                headers : {
                    'Content-Type' : "application/json"
                },
                body : JSON.stringify({password,changedPassword})
            })

            let data = await response.json()

            if(!data.status){
                return Must.failure({time: 3000, content: data.message})
            }

            setTimeout(() => {
                window.location.href = '/profile'
            },1500)

            Must.success({time: 1500, content: data.message, color:'#27ae60'})

            document.getElementById("icon").style.backgroundColor = 'beige'
            document.getElementsByClassName("pop-container")[0].style.borderRadius = '5px'

        })

        // Add address
        function validateAddress(name,phone,pincode,city,isSelected){

            const usernamePattern = /^[A-Za-z\s]{3,}$/;
            const phonePattern = /^[0-9]{10}$/;

            let isValid = true

            if(!usernamePattern.test(name)){
                document.getElementById('nameLabel').innerHTML = 'Name must be at least 3 characters long and contain only letters and spaces.'
                document.getElementById('nameLabel').style.color = 'red'
                isValid = false
            }else{
                document.getElementById('nameLabel').innerHTML = 'Name'
                document.getElementById('nameLabel').style.color = 'black'   
            }

            if(!phonePattern.test(phone)){
                document.getElementById('mobLabel').innerHTML = 'Phone number must be exactly 10 digits.'
                document.getElementById('mobLabel').style.color = 'red'
                isValid = false
            }else{
                document.getElementById('mobLabel').innerHTML = 'Mobile'
                document.getElementById('mobLabel').style.color = 'black'  
            }

            if (!/^\d{6}$/.test(pincode)) {
               document.getElementById('pincodeLabel').innerHTML = "Pincode must be exactly 6 digits.";
               document.getElementById('pincodeLabel').style.color = 'red'
                isValid = false;
            }else{
                document.getElementById('pincodeLabel').innerHTML = 'Pincode'
                document.getElementById('pincodeLabel').style.color = 'black'  
            }
            
            if (!/^[A-Za-z\s]+$/.test(city)) {
                document.getElementById('cityLabel').innerHTML = "City name contain only alphabets.";
                document.getElementById('cityLabel').style.color = 'red'
                isValid = false;
            }else{
                document.getElementById('cityLabel').innerHTML = 'City'
                document.getElementById('cityLabel').style.color = 'black'  
            }

            if(!isSelected){
                document.getElementById('typeLabel').innerHTML = "Please select an address type before submitting.";
                document.getElementById('typeLabel').style.color = 'red'
                isValid = false;
            }else{
                document.getElementById('typeLabel').innerHTML = 'Address Type'
                document.getElementById('typeLabel').style.color = 'black'  
            }

            return isValid
        }

        document.getElementById('addressForm').addEventListener('submit', async (event) => {
            event.preventDefault()

            const name = document.getElementById('nameAtAddress').value.trim()
            const phone = document.getElementById('phoneAtAddress').value.trim()
            const pincode = document.getElementById('pincode').value.trim()
            const city = document.getElementById('city').value.trim()
            const fullAddress = document.getElementById('address').value.trim()
            const country = document.getElementById('country').value
            const state = document.getElementById('state').value
            const radios = document.getElementsByName('addressType')
         
            let addressType = null
            let isSelected = false
            for(const radio of radios){
                if(radio.checked){
                    addressType = radio.value
                    isSelected = true
                    break
                }
            }

            if(!validateAddress(name,phone,pincode,city,isSelected)) return 
           
            let response = await fetch('/addAddress',{
                method : "POST",
                headers : {
                    'Content-Type' : "application/json"
                },
                body : JSON.stringify({name,phone,pincode,city,fullAddress,country,state,addressType})
            })

            let data = await response.json()
            
            if(!data.status){
                return Must.failure({time: 3000, content:"Something went wrong"})
            }
            Must.success({time: 1500, content: data.message, color:'#27ae60'})

            setTimeout(() => {
                window.location.href = '/profile'
            },1500)

            document.getElementById("icon").style.backgroundColor = 'beige'
            document.getElementsByClassName("pop-container")[0].style.borderRadius = '5px'
        })


    </script>


<%-include("../../Views/Partials/user/footer")%>
