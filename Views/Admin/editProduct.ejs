
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>UrbanDot | Admin Dashboard</title>
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <meta name="description" content="" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta property="og:title" content="" />
        <meta property="og:type" content="" />
        <meta property="og:url" content="" />
        <meta property="og:image" content="" />
        <!-- Favicon -->
        <link rel="shortcut icon" type="image/x-icon" href="/Admin/imgs/theme/favicon.png" />
        <!-- Template CSS -->
        <link href="/Admin/css/main.css?v=1.1" rel="stylesheet" type="text/css" />

        <script src="https://unpkg.com/must-pop@2.1.1/dist/library.js"></script>
    </head>

    <style>
        .addImg{
            height: 400px;
        }
        .input-upload{
            height: 300px;
        }
        .input-upload img{
            min-width: 100px !important;
            margin: 0;
        }
        .cropper-input-btn{
            height: 38px;
        }
        #cropBtn1{
            display:none;
        }
        #cropBtn2{
            display:none;
        }
        #cropBtn3{
            display:none;
        }
        #cropBtn4{
            display:none;
        }
        img{
            width: 100%;
            height: 100%;
        }
        #productCarocusel{
            height: 100%;
        }

    </style>

    <body>
        <%-include("../../Views/Partials/admin/sidebar")%>
        <main class="main-wrap">
            <%-include("../../Views/Partials/admin/header")%>
            <section class="content-main">
                <div class="row">
                    <div class="col-9">
                        <div class="content-header">
                            <h2 class="content-title">Edit Product</h2>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="card mb-4">
                            <div class="card-body">
                                <form method="post" id="product_form" enctype="multipart/form-data">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Product name</label>
                                        <input type="text" placeholder="<%=product.productName%>" class="form-control" id="product_name" name="name" />
                                    </div>

                                    <div class="mb-4">
                                        <label class="form-label">Description</label>
                                        <textarea placeholder="<%=product.description%>" class="form-control" id="product_description" name="description" rows="4"></textarea>
                                    </div>
                                    <div class="col-mb-4">
                                        <label class="form-label">Category</label>
                                        <select class="form-select" name="category">
                                            <% for (let i = 0; i < category.length; i++) { %>
                                                <option value="<%= category[i]._id %>" 
                                                    <%= product.category && category[i]._id.toString() === product.category._id.toString() ? 'selected' : '' %>>
                                                    <%= category[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="row d-flex justify-content-center pt-30">
                                        <div class="col-lg-6">
                                            <div class="mb-4">
                                                <label class="form-label">Regular price</label>
                                                <div class="row gx-2">
                                                    <input placeholder="<%=product.regularPrice%>" type="text" class="form-control" name="quantity" id="regularPrice"/>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-4">
                                                <label class="form-label">Current price/Offer price</label>
                                                <input placeholder="<%=product.offerPrice%>" type="text" class="form-control" name="price" id='offerPrice'/>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row col-12 d-flex justify-content-evenly align-items-center mt-25">
                                        <div class="addImg card mb-2 col-4">
                                            <div class="card-body p-0 d-flex flex-column justify-content-evenly align-items-center">
                                                <div class="input-upload d-flex justify-content-center">
                                                    <img src="/uploads/product-images/<%=product.images[0]%>" 
                                                         style="min-width: 100px; max-width: 1000px;" id="defaultImg-1"/>
                                                </div>
                                                <div class="d-flex cropper-input-btn">
                                                    <input class="form-control" type="file" name="images" id="imgInput1" 
                                                           accept="image/*" onchange="previewImage(event, 1)" />
                                                    <button type="button" class="btn btn-submit btn-success" id="cropBtn1">Crop</button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="addImg card mb-2 col-4">
                                            <div class="card-body p-0 d-flex flex-column justify-content-evenly align-items-center">
                                                <div class="input-upload d-flex justify-content-center">
                                                    <img src="/uploads/product-images/<%=product.images[1]%>" 
                                                         style="min-width: 100px; max-width: 1000px;" id="defaultImg-2"/>
                                                </div>
                                                <div class="d-flex cropper-input-btn">
                                                    <input class="form-control" type="file" name="images" id="imgInput2" 
                                                           accept="image/*" onchange="previewImage(event, 2)" />
                                                    <button type="button" class="btn btn-submit btn-success" id="cropBtn2">Crop</button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="addImg card mb-2 col-4">
                                            <div class="card-body p-0 d-flex flex-column justify-content-evenly align-items-center">
                                                <div class="input-upload d-flex justify-content-center">
                                                    <img src="/uploads/product-images/<%=product.images[2]%>" 
                                                         style="min-width: 100px; max-width: 1000px;" id="defaultImg-3"/>
                                                </div>
                                                <div class="d-flex cropper-input-btn">
                                                    <input class="form-control" type="file" name="images" id="imgInput3" 
                                                           accept="image/*" onchange="previewImage(event, 3)" />
                                                    <button type="button" class="btn btn-submit btn-success" id="cropBtn3">Crop</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-center align-items-center pb-25">
                                        <button class="btn btn-md rounded font-sm hover-up w-100 d-flex justify-content-center align-items-center mt-50" type="submit">Save changes</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
               
                    </div>
                    
                </div>
            </section>
            <%-include("../../Views/Partials/admin/footer")%>
        </main>

        <script>

            let selectedImages = [];
            let cropperInstances = {}; // Store cropper instances for each image separately

            function previewImage(event, index) {
                const imgElement = document.getElementById(`defaultImg-${index}`);
                if (!imgElement) return;

                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function () {
                        imgElement.src = reader.result;
                        imgElement.style.maxWidth = '100%';
                        imgElement.style.maxHeight = '100%';
                        imgElement.classList.add("uploading-img");

                        // Destroy any existing cropper instance for this index before creating a new one
                        if (cropperInstances[index]) {
                            cropperInstances[index].destroy();
                        }

                        // Initialize cropper for this specific index
                        cropperInstances[index] = new Cropper(imgElement, {
                            aspectRatio: 1 / 1.2,
                            viewMode: 1,
                            guides: true,
                            background: false,
                            autoCropArea: 1,
                            zoomable: true,
                        });

                        // Display cropper container
                        const cropperContainer = imgElement.parentNode;
                        cropperContainer.style.display = 'block';

                        // Save Button Logic
                        const saveButton = document.querySelector(`#cropBtn${index}`);
                        saveButton.style.display = 'initial';

                        saveButton.onclick = async () => {
                            const cropper = cropperInstances[index]; // Use cropper instance for this index
                            if (cropper) {
                                const croppedCanvas = cropper.getCroppedCanvas({ width: 280, height: 300 });
                                if (croppedCanvas) {
                                    imgElement.src = croppedCanvas.toDataURL('image/jpeg', 0.8);

                                    await croppedCanvas.toBlob((blob) => {
                                        const imgFile = new File([blob], `cropped-img-${Date.now()}-${index}.png`, {
                                            type: blob.type,
                                        });

                                        // Update selectedImages array
                                        selectedImages[index] = imgFile;
                                    });

                                    saveButton.style.display = 'none';
                                    cropper.destroy();
                                    cropperInstances[index] = null; // Clear cropper instance for this index
                                }
                            }
                        };
                    };
                    reader.readAsDataURL(file);
                }
            }

            document.querySelectorAll("input[type='file']").forEach((input, index) => {
                input.addEventListener("change", (event) => {
                    previewImage(event, index + 1); // Ensure proper index for IDs
                });
            });

            document.getElementById("product_form").addEventListener("submit", async (event) => {
                event.preventDefault();

                if (validateForm()) {
                    const formData = new FormData();
                    const originalData = {
                        productName: "<%= product.productName %>",
                        description: "<%= product.description %>",
                        category: "<%= product.category ? product.category._id : '' %>",
                        regularPrice: "<%= product.regularPrice %>",
                        offerPrice: "<%= product.offerPrice %>",
                    };

                    const updatedFields = {};

                    // Check each field for changes and add to formData only if they have changed
                    const productName = document.getElementById("product_name").value;
                    if (productName && productName !== originalData.productName) {
                        updatedFields.productName = productName;
                    }

                    const description = document.getElementById("product_description").value;
                    if (description && description !== originalData.description) {
                        updatedFields.description = description;
                    }

                    const category = document.querySelector("select[name='category']").value;
                    if (category && category !== originalData.category) {
                        updatedFields.category = category;
                    }

                    const regularPrice = document.getElementById("regularPrice").value;
                    if (regularPrice && regularPrice !== originalData.regularPrice) {
                        updatedFields.regularPrice = regularPrice;
                    }

                    const offerPrice = document.getElementById("offerPrice").value;
                    if (offerPrice && offerPrice !== originalData.offerPrice) {
                        updatedFields.offerPrice = offerPrice;
                    }

                    // Only append updated fields to formData
                    Object.keys(updatedFields).forEach((key) => {
                        formData.append(key, updatedFields[key]);
                    });

                    // Handle images
                    selectedImages.forEach((imageFile) => {
                        if (imageFile) {
                            formData.append("images", imageFile);
                        }
                    });

                    // Submit the form data to the server
                    const response = await fetch(`/admin/editProduct/<%=product._id%>`, {
                        method: "POST",
                        body: formData,
                    });

                    const data = await response.json();
                    if (!data.status) {
                        return Must.failure({ time: 6000, content: data.message });
                    }

                    Must.success({ time: 1300, content: data.message, color: "#27ae60" });
                    document.getElementById("icon").style.backgroundColor = 'beige';
                    document.getElementsByClassName("pop-container")[0].style.borderRadius = '5px';

                    setTimeout(() => {
                        window.location.href = '/admin/products';
                    }, 1300);
                }    
            });

            function validateForm() {
                const updatedFields = getUpdatedFields();

                for (const field in updatedFields) {
                    if (!validateField(field, updatedFields[field])) {
                        return false;
                    }
                }
                return true;
            }

            function getUpdatedFields() {
                const originalData = {
                    productName: "<%= product.productName %>",
                    description: "<%= product.description %>",
                    category: "<%= product.category ? product.category._id : '' %>",
                    regularPrice: "<%= product.regularPrice %>",
                    offerPrice: "<%= product.offerPrice %>",
                };

                const updatedFields = {};

                const productName = document.getElementById("product_name").value;
                if (productName && productName !== originalData.productName) {
                    updatedFields.productName = productName;
                }

                const description = document.getElementById("product_description").value;
                if (description && description !== originalData.description) {
                    updatedFields.description = description;
                }

                const category = document.querySelector("select[name='category']").value;
                if (category && category !== originalData.category) {
                    updatedFields.category = category;
                }

                const regularPrice = document.getElementById("regularPrice").value;
                if (regularPrice && regularPrice !== originalData.regularPrice) {
                    updatedFields.regularPrice = regularPrice;
                }

                const offerPrice = document.getElementById("offerPrice").value;
                if (offerPrice && offerPrice !== originalData.offerPrice) {
                    updatedFields.offerPrice = offerPrice;
                }

                return updatedFields;
            }

            function validateField(fieldName, value) {
                const minLength = 10;
                const maxLength = 100;
                const allowedCharacters = /^[a-zA-Z\s\-\&\.\']+$/;

                switch (fieldName) {
                    case "productName":
                        if (value.length < minLength || value.length > maxLength) {
                            return displayErrorMessage(`Product name must be between ${minLength} and ${maxLength} characters.`);
                        }
                        if (!allowedCharacters.test(value)) {
                            return displayErrorMessage("Product name contains invalid characters.");
                        }
                        break;
                    case "regularPrice":
                    case "offerPrice":
                        if (!/^\d+(\.\d{1,2})?$/.test(value) || parseFloat(value) < 0) {
                            return displayErrorMessage(`Please enter a valid price for ${fieldName}.`);
                        }
                        if (fieldName === "offerPrice" && parseFloat(value) > parseFloat(document.getElementById("regularPrice").value)) {
                            return displayErrorMessage("Offer price must be less than the regular price.");
                        }
                        break;
                    default:
                        return true;
                }
                return true;
            }

            function displayErrorMessage(message) {
                Must.failure({ time: 6000, content: message });
                return false;
            }  
            
        </script>

        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

        <script src="/Admin/js/vendors/jquery-3.6.0.min.js"></script>
        <script src="/Admin/js/vendors/bootstrap.bundle.min.js"></script>
        <script src="/Admin/js/vendors/select2.min.js"></script>
        <script src="/Admin/js/vendors/perfect-scrollbar.js"></script>
        <script src="/Admin/js/vendors/jquery.fullscreen.min.js"></script>
        <!-- Main Script -->
        <script src="/Admin/js/main.js?v=1.1" type="text/javascript"></script>
    </body>
</html>